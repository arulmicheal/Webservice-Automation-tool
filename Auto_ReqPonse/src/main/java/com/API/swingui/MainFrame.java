/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.API.swingui;

import com.API.main.WebserviceMain;
import com.API.reports.ExtentReport.Reporter;
import com.API.util.Data.CsvData;
import io.restassured.RestAssured;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import java.awt.Color;
import java.awt.Component;
import java.util.HashMap;
import java.util.List;
import java.util.Vector;
import javax.swing.JFileChooser;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author praka
 */
public class MainFrame extends javax.swing.JFrame {

    static public String strCSVFilePath="";
    Reporter report=new Reporter();
    WebserviceMain wsMain=new WebserviceMain();
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        report.startReport();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanelMainTab = new javax.swing.JPanel();
        jTextFieldEndPointUrl = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonSendReq = new javax.swing.JButton();
        jComboBoxMethods = new javax.swing.JComboBox<>();
        jLabelStatusCode = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelProcess = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelParams = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableParams = new javax.swing.JTable();
        jPanelHeaders = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableHeaders = new javax.swing.JTable();
        jPanelReqBody = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaReqBody = new javax.swing.JTextArea();
        jPanelAuth = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaResBody = new javax.swing.JTextArea();
        jCheckBoxBatchExecution = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jPanelBatchTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCsvData = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jButtonClearCsvTable = new javax.swing.JButton();
        jButtonSaveCsv = new javax.swing.JButton();
        jButtonInsertRow = new javax.swing.JButton();
        jButtonDeleteRow = new javax.swing.JButton();
        jButtonExecute = new javax.swing.JButton();
        jLabelFileName = new javax.swing.JLabel();
        jButtonUpload = new javax.swing.JButton();
        jCheckBoxParallel = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ReqPonse");
        setBackground(new java.awt.Color(0, 51, 204));
        setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        setForeground(java.awt.Color.white);
        setName("MainFrame"); // NOI18N

        jTabbedPane2.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanelMainTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelMainTab.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N

        jTextFieldEndPointUrl.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("EndPointUrl");

        jButtonSendReq.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButtonSendReq.setForeground(new java.awt.Color(0, 0, 204));
        jButtonSendReq.setText("Send Request");
        jButtonSendReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendReqActionPerformed(evt);
            }
        });

        jComboBoxMethods.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GET", "POST", "PUT", "DELETE", "UPDATE" }));

        jLabelStatusCode.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("Status :");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 0));
        jLabel3.setText("Request");

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 0));
        jLabel4.setText("Response");

        jLabelProcess.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        jLabelProcess.setForeground(new java.awt.Color(0, 153, 0));

        jTabbedPane1.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N

        jPanelParams.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N

        jTableParams.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTableParams.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Key", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableParams.getTableHeader().setReorderingAllowed(false);
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) jTableParams.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment(0);
        jTableParams.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableParamsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTableParams);

        javax.swing.GroupLayout jPanelParamsLayout = new javax.swing.GroupLayout(jPanelParams);
        jPanelParams.setLayout(jPanelParamsLayout);
        jPanelParamsLayout.setHorizontalGroup(
            jPanelParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(jPanelParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
        );
        jPanelParamsLayout.setVerticalGroup(
            jPanelParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
            .addGroup(jPanelParamsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Params", jPanelParams);

        jPanelHeaders.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N

        jTableHeaders.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTableHeaders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Key", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableHeaders.getTableHeader().setReorderingAllowed(false);
        jTableHeaders.setVerifyInputWhenFocusTarget(false);
        DefaultTableCellRenderer rendererHeaders = (DefaultTableCellRenderer) jTableHeaders.getTableHeader().getDefaultRenderer();
        rendererHeaders.setHorizontalAlignment(0);
        jTableHeaders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableHeadersMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTableHeaders);

        javax.swing.GroupLayout jPanelHeadersLayout = new javax.swing.GroupLayout(jPanelHeaders);
        jPanelHeaders.setLayout(jPanelHeadersLayout);
        jPanelHeadersLayout.setHorizontalGroup(
            jPanelHeadersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(jPanelHeadersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
        );
        jPanelHeadersLayout.setVerticalGroup(
            jPanelHeadersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
            .addGroup(jPanelHeadersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Headers", jPanelHeaders);

        jPanelReqBody.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N

        jTextAreaReqBody.setColumns(20);
        jTextAreaReqBody.setRows(5);
        jTextAreaReqBody.setName("Params"); // NOI18N
        jScrollPane1.setViewportView(jTextAreaReqBody);

        javax.swing.GroupLayout jPanelReqBodyLayout = new javax.swing.GroupLayout(jPanelReqBody);
        jPanelReqBody.setLayout(jPanelReqBodyLayout);
        jPanelReqBodyLayout.setHorizontalGroup(
            jPanelReqBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(jPanelReqBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelReqBodyLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanelReqBodyLayout.setVerticalGroup(
            jPanelReqBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
            .addGroup(jPanelReqBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelReqBodyLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Request Body", jPanelReqBody);

        jPanelAuth.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N

        javax.swing.GroupLayout jPanelAuthLayout = new javax.swing.GroupLayout(jPanelAuth);
        jPanelAuth.setLayout(jPanelAuthLayout);
        jPanelAuthLayout.setHorizontalGroup(
            jPanelAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );
        jPanelAuthLayout.setVerticalGroup(
            jPanelAuthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Authorization", jPanelAuth);

        jTextAreaResBody.setColumns(20);
        jTextAreaResBody.setRows(5);
        jScrollPane3.setViewportView(jTextAreaResBody);
        jTextAreaResBody.getAccessibleContext().setAccessibleName("jTextAreaResBody");

        jCheckBoxBatchExecution.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jCheckBoxBatchExecution.setForeground(new java.awt.Color(0, 0, 204));
        jCheckBoxBatchExecution.setText("Batch Execution");
        jCheckBoxBatchExecution.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxBatchExecutionItemStateChanged(evt);
            }
        });
        jCheckBoxBatchExecution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBatchExecutionActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(159, 210, 159));
        jButton1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 102));
        jButton1.setText("Add To Batch Execution");
        jButton1.setToolTipText("");

        javax.swing.GroupLayout jPanelMainTabLayout = new javax.swing.GroupLayout(jPanelMainTab);
        jPanelMainTab.setLayout(jPanelMainTabLayout);
        jPanelMainTabLayout.setHorizontalGroup(
            jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMainTabLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMainTabLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(262, 262, 262)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelStatusCode, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelMainTabLayout.createSequentialGroup()
                                .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTabbedPane1)
                                    .addComponent(jScrollPane3)
                                    .addGroup(jPanelMainTabLayout.createSequentialGroup()
                                        .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jComboBoxMethods, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBoxBatchExecution))))
                    .addGroup(jPanelMainTabLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEndPointUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanelMainTabLayout.createSequentialGroup()
                                .addComponent(jButtonSendReq)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(79, 79, 79))
        );
        jPanelMainTabLayout.setVerticalGroup(
            jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelProcess, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTextFieldEndPointUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSendReq)))
                .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMainTabLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jComboBoxMethods, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelMainTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addGap(12, 12, 12)
                .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMainTabLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(8, 8, 8)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBoxBatchExecution))
                .addGap(18, 18, 18)
                .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelMainTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4))
                    .addComponent(jLabelStatusCode, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("tabPanel");

        jTabbedPane2.addTab("Single Execution", jPanelMainTab);
        jPanelMainTab.getAccessibleContext().setAccessibleName("");

        jPanelBatchTab.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N

        jScrollPane2.setAutoscrolls(true);
        jScrollPane2.setPreferredSize(new java.awt.Dimension(500, 500));

        jTableCsvData.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        jTableCsvData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Column1", "Column2", "Column3", "Column4", "Column5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCsvData.setFillsViewportHeight(true);
        jTableCsvData.setRowHeight(20);
        jTableCsvData.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableCsvData);

        jButtonClearCsvTable.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonClearCsvTable.setForeground(new java.awt.Color(0, 0, 240));
        jButtonClearCsvTable.setText("Clear Table");
        jButtonClearCsvTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearCsvTableActionPerformed(evt);
            }
        });

        jButtonSaveCsv.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonSaveCsv.setForeground(new java.awt.Color(0, 0, 240));
        jButtonSaveCsv.setText("Save");
        jButtonSaveCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveCsvActionPerformed(evt);
            }
        });

        jButtonInsertRow.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonInsertRow.setForeground(new java.awt.Color(0, 0, 240));
        jButtonInsertRow.setText("Insert Row");
        jButtonInsertRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertRowActionPerformed(evt);
            }
        });

        jButtonDeleteRow.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonDeleteRow.setForeground(new java.awt.Color(0, 0, 240));
        jButtonDeleteRow.setText("Delete Row(s)");
        jButtonDeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteRowActionPerformed(evt);
            }
        });

        jButtonExecute.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonExecute.setForeground(new java.awt.Color(27, 133, 121));
        jButtonExecute.setText("Execute");
        jButtonExecute.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExecuteActionPerformed(evt);
            }
        });

        jButtonUpload.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jButtonUpload.setForeground(new java.awt.Color(0, 0, 240));
        jButtonUpload.setText("Upload (.csv file)");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });

        jCheckBoxParallel.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jCheckBoxParallel.setForeground(new java.awt.Color(153, 153, 0));
        jCheckBoxParallel.setText("Run in Parallel");
        jCheckBoxParallel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxParallelItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jButtonUpload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonInsertRow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jCheckBoxParallel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButtonDeleteRow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonClearCsvTable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonSaveCsv)))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUpload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSaveCsv)
                    .addComponent(jButtonInsertRow)
                    .addComponent(jButtonDeleteRow)
                    .addComponent(jButtonClearCsvTable))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxParallel)
                    .addComponent(jButtonExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelBatchTabLayout = new javax.swing.GroupLayout(jPanelBatchTab);
        jPanelBatchTab.setLayout(jPanelBatchTabLayout);
        jPanelBatchTabLayout.setHorizontalGroup(
            jPanelBatchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBatchTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBatchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelBatchTabLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 309, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelBatchTabLayout.setVerticalGroup(
            jPanelBatchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBatchTabLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Batch Execution", jPanelBatchTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1026, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSendReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendReqActionPerformed
        String strEndpoint=jTextFieldEndPointUrl.getText();
        
        report.startTest(strEndpoint);
        jLabelProcess.setForeground(Color.blue);
        jLabelProcess.setText("Processing...");
        jPanelMainTab.repaint();
        try
        {
            //Setting Request Method and sending request
            String strMethod=jComboBoxMethods.getSelectedItem().toString();
            String strRequestBody=jTextAreaReqBody.getText();
            HashMap<String,String> mapHeaders=new HashMap<String,String>();
            HashMap<String,String> mapParams=new HashMap<String,String>();
            //wsMain.batchRequest(strEndpoint,strMethod);
            wsMain.sendRequest(strEndpoint, strMethod, strRequestBody, mapHeaders, mapParams);
            // Now let us print the body of the message to see what response
            // we have recieved from the server
            //jLabelStatusCode.setText(response.getStatusLine());
            //jTextAreaResBody.setText(response.getBody().prettyPrint());
            report.reportStep("Testing", "PASS",false);
            jLabelProcess.setForeground(Color.decode("#073b04"));
            jLabelProcess.setText("Completed!");
            jPanelMainTab.repaint();
        }catch(Exception ex)
        {
            jLabelProcess.setForeground(Color.red);
            jLabelProcess.setText("Exception");
            jPanelMainTab.repaint();
            try {
                throw new Exception(ex);
            } catch (Exception ex1) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
        
    }//GEN-LAST:event_jButtonSendReqActionPerformed

    private void jCheckBoxBatchExecutionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxBatchExecutionItemStateChanged
        if(evt.getStateChange()==1)
        {
            BatchExecution dialogBatch=new BatchExecution(this, rootPaneCheckingEnabled);
            dialogBatch.setVisible(true);
        }
    }//GEN-LAST:event_jCheckBoxBatchExecutionItemStateChanged

    private void jCheckBoxBatchExecutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBatchExecutionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxBatchExecutionActionPerformed

    private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed
        jLabelFileName.setText("");
        jLabelFileName.repaint();
        int iRes=jFileChooser1.showOpenDialog(null);
        DefaultTableModel tableModel = new DefaultTableModel(0,0);

        if (iRes == JFileChooser.APPROVE_OPTION)
        {
            String strFileName=jFileChooser1.getSelectedFile().getName();
            if(strFileName.substring(strFileName.lastIndexOf("."),strFileName.length()).equalsIgnoreCase(".csv"))
            {
                try {
                    jLabelFileName.setForeground(Color.blue);
                    jLabelFileName.setText(jFileChooser1.getSelectedFile().getName());

                    strCSVFilePath=jFileChooser1.getSelectedFile().getAbsolutePath();
                    CsvData.setData(strCSVFilePath);
                    //Loading data in jTable from CSV
                    List<Object[]> listOfData=CsvData.getCsvRows();
                    tableModel = new DefaultTableModel(CsvData.getCsvHeaders(), 0);
                    jTableCsvData.setModel(tableModel);
                    for (int i = 0; i < jTableCsvData.getColumnModel().getColumnCount(); i++) {
                        TableColumn column = jTableCsvData.getColumnModel().getColumn(i);
                        column.setPreferredWidth(100);
                    }
                    //Add row dynamically into the table
                    for (int count = 1; count <= listOfData.size()-1; count++) {
                        tableModel.addRow(CsvData.getCsvRows().get(count));
                    }
                    jScrollPane1.repaint();
                } catch (Exception ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else
            {
                jLabelFileName.setForeground(Color.red);
                jLabelFileName.setText("Upload valid file type!");

            }
        }
    }//GEN-LAST:event_jButtonUploadActionPerformed

    private void jCheckBoxParallelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxParallelItemStateChanged
        if(evt.getStateChange()==1)
        {

        }
    }//GEN-LAST:event_jCheckBoxParallelItemStateChanged

    private void jButtonExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExecuteActionPerformed

    }//GEN-LAST:event_jButtonExecuteActionPerformed

    private void jButtonClearCsvTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearCsvTableActionPerformed
        DefaultTableModel dm = (DefaultTableModel)jTableCsvData.getModel();
        dm.getDataVector().removeAllElements();
        dm.fireTableDataChanged();
    }//GEN-LAST:event_jButtonClearCsvTableActionPerformed

    private void jButtonSaveCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveCsvActionPerformed
        try {
            DefaultTableModel dm = (DefaultTableModel)jTableCsvData.getModel();
            dm.fireTableDataChanged();
            CsvData.setCsvRows(dm.getDataVector());
        } catch (Exception ex) {
            Logger.getLogger(BatchExecution.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSaveCsvActionPerformed

    private void jButtonInsertRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertRowActionPerformed
        DefaultTableModel dm = (DefaultTableModel)jTableCsvData.getModel();
        dm.insertRow(jTableCsvData.getSelectedRow()+1,new Vector());
        dm.fireTableDataChanged();
    }//GEN-LAST:event_jButtonInsertRowActionPerformed

    private void jButtonDeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteRowActionPerformed
        try {
            DefaultTableModel dm = (DefaultTableModel)jTableCsvData.getModel();
            int iSelectedRow=jTableCsvData.getSelectedRow();
            if(iSelectedRow>=0)
            {
                while (iSelectedRow != -1)
                {
                    int modelRow = jTableCsvData.convertRowIndexToModel(iSelectedRow);
                    dm.removeRow( modelRow );
                    iSelectedRow = jTableCsvData.getSelectedRow();
                }
                dm.fireTableDataChanged();
                CsvData.setCsvRows(dm.getDataVector());
            }
        } catch (Exception ex) {
            Logger.getLogger(BatchExecution.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonDeleteRowActionPerformed

    private void jTableParamsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableParamsMouseClicked
        jTableMouseclicked(evt.getComponent());
        /*DefaultTableModel dm = (DefaultTableModel)jTableParams.getModel();
        if(jTableParams.getSelectedRow()+1==jTableParams.getRowCount() && dm.getValueAt(jTableParams.getSelectedRow(), 0)!=null)
        {
            dm.insertRow(jTableParams.getSelectedRow()+1,new Vector());
            dm.fireTableDataChanged();
        } */ 
    }//GEN-LAST:event_jTableParamsMouseClicked

    private void jTableHeadersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHeadersMouseClicked
        jTableMouseclicked(evt.getComponent());
    }//GEN-LAST:event_jTableHeadersMouseClicked
    private void jTableMouseclicked(Component comp)
    {
        DefaultTableModel dm = (DefaultTableModel)((JTable)comp).getModel();
        if(((JTable)comp).getSelectedRow()+1==((JTable)comp).getRowCount() && !dm.getValueAt(((JTable)comp).getSelectedRow(), 0).equals(""))
        {
            dm.insertRow(((JTable)comp).getSelectedRow()+1,new Vector());
            dm.fireTableDataChanged();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonClearCsvTable;
    private javax.swing.JButton jButtonDeleteRow;
    private javax.swing.JButton jButtonExecute;
    private javax.swing.JButton jButtonInsertRow;
    private javax.swing.JButton jButtonSaveCsv;
    private javax.swing.JButton jButtonSendReq;
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JCheckBox jCheckBoxBatchExecution;
    private javax.swing.JCheckBox jCheckBoxParallel;
    private javax.swing.JComboBox<String> jComboBoxMethods;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelFileName;
    private javax.swing.JLabel jLabelProcess;
    private javax.swing.JLabel jLabelStatusCode;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelAuth;
    private javax.swing.JPanel jPanelBatchTab;
    private javax.swing.JPanel jPanelHeaders;
    private javax.swing.JPanel jPanelMainTab;
    private javax.swing.JPanel jPanelParams;
    private javax.swing.JPanel jPanelReqBody;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTableCsvData;
    private javax.swing.JTable jTableHeaders;
    private javax.swing.JTable jTableParams;
    private javax.swing.JTextArea jTextAreaReqBody;
    private javax.swing.JTextArea jTextAreaResBody;
    private javax.swing.JTextField jTextFieldEndPointUrl;
    // End of variables declaration//GEN-END:variables
}
